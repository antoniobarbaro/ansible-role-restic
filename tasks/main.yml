---
# tasks file for restic
- name: Install requirements
  yum: 
    state: present 
    name: bzip2
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
- name: download restic
  get_url:
    url: '{{ restic_download_url }}v{{ restic_version }}/restic_{{ restic_version }}_{{ restic_os_type }}.bz2'
    dest: '{{ restic_install_path }}/restic.bz2'
    force: yes
- name: unpack restic
  shell: 'bzip2 -cd restic.bz2 > {{ restic_install_path }}/restic'
  args:
    chdir: '{{ restic_install_path }}'
- name: change restic file mode
  file:
    path: '{{ restic_install_path }}/restic'
    mode: "u=xrw"    
- name: delete restic download file
  file:
    path: '{{ restic_install_path }}/restic.bz2'
    state: absent
- name: Adding restic_repository enviroment variable
  lineinfile: 
    dest: '/root/.bashrc'
    regexp: '^export RESTIC_REPOSITORY'     
    line: 'export RESTIC_REPOSITORY={{ restic_repository_path }}' 
    insertafter: 'EOF' 
    state: present
  when: not ansible_distribution == 'NA'    
- name: Adding restic_password enviroment variable
  lineinfile: 
    dest: '/root/.bashrc'
    regexp: '^export RESTIC_PASSWORD'     
    line: 'export RESTIC_PASSWORD={{ restic_password }}' 
    insertafter: 'EOF' 
    state: present       
  when: not ansible_distribution == 'NA'
- name: Adding restic_aws_access_key enviroment variable
  lineinfile: 
    dest: '/root/.bashrc'
    regexp: '^export AWS_ACCESS_KEY_ID'     
    line: 'export AWS_ACCESS_KEY_ID={{ restic_aws_access_key }}' 
    insertafter: 'EOF' 
    state: present       
  when: not ansible_distribution == 'NA'
- name: Adding restic_aws_secret_key enviroment variable
  lineinfile: 
    dest: '/root/.bashrc'
    regexp: '^export AWS_SECRET_ACCESS_KEY'     
    line: 'export AWS_SECRET_ACCESS_KEY={{ restic_aws_secret_key }}' 
    insertafter: 'EOF' 
    state: present       
  when: not ansible_distribution == 'NA'
- name: Adding restic_aws_default_region enviroment variable
  lineinfile: 
    dest: '/root/.bashrc'
    regexp: '^export AWS_DEFAULT_REGION'     
    line: 'export AWS_DEFAULT_REGION={{ restic_aws_default_region }}' 
    insertafter: 'EOF' 
    state: present      
  when: not ansible_distribution == 'NA'
- name: Creates repository directory
  file:
    path: '{{ restic_repository_path }}'
    state: directory
- name: Initialize restic repository
  shell: restic init
  ignore_errors: yes
  environment:
    PATH: '$PATH:{{ restic_install_path }}'
    RESTIC_REPOSITORY: '{{ restic_repository_path }}'
    RESTIC_PASSWORD: '{{ restic_password }}'
    AWS_ACCESS_KEY_ID: '{{ restic_aws_access_key }}' 
    AWS_SECRET_ACCESS_KEY: '{{ restic_aws_secret_key }}'
    AWS_DEFAULT_REGION: '{{ restic_aws_default_region }}' 
  register: restic_init
- name: debug restic init success
  debug:
    msg: "{{ restic_init.stdout_lines }}"
- name: debug restic init error
  debug:
    msg: "{{ restic_init.stderr_lines }}"    
- name: copy backup script file
  template:
    src: templates/restic_backup.sh.j2
    dest: '{{ restic_script_path }}/restic_backup.sh'
#    owner: root
#    group: root
    mode: 0700
- name: set cron snapshots
  cron:
    name: "Restic Snapshot"
    minute: "{{ restic_cron_minute }}"
    hour: "{{ restic_cron_hour }}"
    day: "{{ restic_cron_day }}"
    month: "{{ restic_cron_month }}"
    weekday: "{{ restic_cron_weekday }}"
    job: 'bash {{ restic_script_path }}/restic_backup.sh >> {{ restic_cron_logfile }}'    
  when: restic_cron_enable